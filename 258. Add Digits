public int addDigits(int num) {
        while(num >= 10){
            num = addNum(num);
        }
        return num;
    }
    
    private int addNum(int n){
        int sum = 0;
        while(n != 0){
            sum = sum + n%10;
            n /= 10;
        }
        return sum;
    }
    
    //no loop and recursive
    1    1
  2    2
  3    3
  4    4
  5    5
  6    6
  7    7
  8    8    
  9    9    
  10    1
  11    2
  12    3    
  13    4
  14    5
  15    6
  16    7
  17    8
  18    9
  19    1
  20    2
  
   

根据上面的列举，我们可以得出规律，每9个一循环，
所有大于9的数的树根都是对9取余，那么对于等于9的数对9取余就是0了，
为了得到其本身，而且同样也要对大于9的数适用，
我们就用(n-1)%9+1这个表达式来包括所有的情况

public int addDigits(int num) {
        return (num-1)%9 + 1;
    }
