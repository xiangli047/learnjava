public int rob(int[] nums) {
        int len = nums.length;
        if(len == 0) return 0;
        if(len == 1) return nums[0];
        
        int[] global = new int[len];
        global[0] = nums[0];
        global[1] = Math.max(nums[0], nums[1]);
        
        for(int i = 2;i < len;i++){
            global[i] = Math.max(global[i-2]+nums[i], global[i-1]);
        }
        
        return global[len-1];
        
    }
    
    //递推公式dp[i] = max(num[i] + dp[i - 2], dp[i - 1])

更简洁
public int rob(int[] nums) {
        if(nums.length == 0) return 0;
        int[] dp = new int[nums.length+1];
        
        dp[0] = 0;
        dp[1] = nums[0];
        
        for(int i = 2; i <= nums.length;i++){
            dp[i] = Math.max(nums[i-1]+dp[i-2], dp[i-1]);
        }
        return dp[nums.length];
        
    }
