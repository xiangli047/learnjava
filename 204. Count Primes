public int countPrimes(int n) {
        boolean[] checker = new boolean[n];
        Arrays.fill(checker,true);
        int rst = 0;
        
        for(int i = 2; i < n; i++){
        //当你要画圈的素数的平方大于 n 时，那么后面没有划去的数都是素数，就不用继续判了
            if(i*i > n) break;
            //remove i的倍数
            if(checker[i]){
                for(int j = i*2; j < n; j=j+i){
                    checker[j] = false;
                }
            }
            
        }
        
        for(int i =2; i < n;i++){
            if(checker[i]) rst++;
        }
        return rst;
    }
    
    具体操作：先将 2~n 的各个数放入表中，然后在2的上面画一个圆圈，然后划去2的其他倍数；
    第一个既未画圈又没有被划去的数是3，将它画圈，再划去3的其他倍数；
    现在既未画圈又没有被划去的第一个数 是5，将它画圈，并划去5的其他倍数……依次类推，
    一直到所有小于或等于 n 的各数都画了圈或划去为止。这时，
    表中画了圈的以及未划去的那些数正好就是小于 n 的素数
