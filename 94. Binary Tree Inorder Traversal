public List<Integer> inorderTraversal(TreeNode root) {
        List<Integer> rst = new ArrayList<Integer>();
        if(root == null) return rst;
        LinkedList<TreeNode> stack = new LinkedList<TreeNode>();
        while(root != null || !stack.isEmpty() ){
            if(root != null){
                stack.push(root);
                root = root.left;
            }else{
                root = stack.pop();
                rst.add(root.val);
                root = root.right;
            }
            
            
        }
        return rst;
        
    }

//recursive

public void helper(TreeNode root, ArrayList<Integer> re){
          if(root==null)
              return;
          helper(root.left,re);
          re.add(root.val);
          helper(root.right,re);
      }
     public ArrayList<Integer> inorderTraversal(TreeNode root) {
          ArrayList<Integer> re = new ArrayList<Integer>();
         if(root==null)
             return re;
         helper(root,re);
         return re;
     }
