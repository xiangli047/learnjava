//题意：找到图里拥有最短深度的所有点， 深度的定义是这个节点可以达到leave的最长路劲数
核心：找到所有在边上的叶子节点，因为他们的入度都是1，找到之后再跟连接他们的节点上删掉，这样一层一层的删，最后剩余1-2个节点就是结果




public List<Integer> findMinHeightTrees(int n, int[][] edges) {
        List<Integer> rst = new ArrayList<Integer>();
        if(n == 1){
            rst.add(0);
            return rst;
        }
        List<Set<Integer>> nodes = new ArrayList<>();
        for(int i = 0; i <= n; i++){
            nodes.add(new HashSet<>());
        }
        for(int i = 0; i < edges.length; i++){
            nodes.get(edges[i][0]).add(edges[i][1]);
            nodes.get(edges[i][1]).add(edges[i][0]);
        }
        
        for(int i = 0; i <= n; i++){
            if(nodes.get(i).size() == 1){
                rst.add(i);
            }
        }
        
        while(n > 2){
            n -= rst.size();
            List<Integer> newLeaves = new ArrayList<>();
            for(int i : rst){
                int j = nodes.get(i).iterator().next();
                nodes.get(j).remove(i);
                if(nodes.get(j).size() == 1){
                    newLeaves.add(j);
                }
            }
            rst = newLeaves;
        }
         

         return rst;
    }
