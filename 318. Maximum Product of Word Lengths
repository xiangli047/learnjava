// 题意：找到数组里没有重复字母的2个单词的最大积

核心：比较两个单词的地方可以优化，用一个value数组里的每个数字代表一个单词。
因为一个整字是32bit，单词一共26位，所以可以放得下。 二进制里每一位代表一个单词，从右往左依次a-z
value[i] |= 1 << words[i].charAt(j) - 'a'就表示把字母变成数字后，把1挪到相应index上，|=或运算确保重复的都是1


public int maxProduct(String[] words) {
        if(words.length == 0) return 0;
        int len = words.length;
        int rst = 0;
        int[] value = new int[len];
        
        for(int i = 0; i < len; i++){
            for(int j = 0; j < words[i].length(); j++){
                value[i] |= 1 << words[i].charAt(j) - 'a';
            }
        }
        
        for(int i = 0; i < len; i++){
            for(int j = i + 1; j < len; j++){
                if((value[i] & value[j]) == 0){
                    rst = Math.max(rst, words[i].length() * words[j].length() );
                }
            }
        }
        return rst;
    }
