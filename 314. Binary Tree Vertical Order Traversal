//题意：垂直顺序把树插入数组里
//典型的bfs题，这里通过使用map得到col和对应所有元素的索引。 通过2个queue来进行遍历，一个控制treenode，一个控制col

List<List<Integer>> rst = new ArrayList<List<Integer>>();
        if(root == null) return rst;
        Map<Integer, ArrayList<Integer>> map = new HashMap<>();
        LinkedList<TreeNode> q = new LinkedList<>();
        LinkedList<Integer> cols = new LinkedList<>();
        int min = 0, max = 0;
        
        q.add(root);
        cols.add(0);
        
        while(!q.isEmpty()){
            TreeNode node = q.poll();
            int col = cols.poll();
            if(!map.containsKey(col)){
                map.put(col, new ArrayList<Integer>());
            }
            map.get(col).add(node.val);
            if(node.left != null){
                q.add(node.left);
                cols.add(col - 1);
                min = Math.min(min, col - 1);
            }
            if(node.right != null){
                q.add(node.right);
                cols.add(col + 1);
                max = Math.max(max, col + 1);
            }
            
        }
        
        for(int i = min; i <= max; i++){
            rst.add(map.get(i));
        }
        
        return rst;
