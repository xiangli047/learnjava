TreeNode pre = null;
    public void flatten(TreeNode root) {
        if(root == null) return;
        TreeNode right = root.right;
        
        if(pre != null){
            pre.left = null;
            pre.right = root;
        }
        
        pre = root; //overwrite?
        flatten(root.left);
        flatten(right);
        
        
    }
    
    //iterator
    if(root == null) return;
        Stack<TreeNode> stack = new Stack<TreeNode>();
        TreeNode p = root;
        
        while(p != null || !stack.isEmpty()){
            
            if(p.right != null){
                stack.push(p.right);
            }
            
            if(p.left != null){
                p.right = p.left;
                p.left = null;
            }else if(!stack.isEmpty()){
                p.right = stack.pop();
            }
            p = p.right;
            
        }
