//题意：设计一个矩阵可以给定2个顶点，找到他们之间拉成的矩形的面积。 同时还要兼备修改的功能。
核心：binary indexed tree。 

int[][] matrix;
    int[][] bit;
    int m;
    int n;
    public NumMatrix(int[][] matrix) {
        this.matrix = matrix;
        this.m = matrix.length;
        if(m == 0) return;
        this.n = matrix[0].length;
        bit = new int[m + 1][n + 1];
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                init(i, j, matrix[i][j]);
            }
        }
           
    }
    
    private void init(int i, int j, int val){
        i++;
        int initJ = ++j;
        while(i <= m){
            j = initJ;
            while(j <= n){
                bit[i][j] += val;
                j += j & -j;
            }
            i += i & -i;
        }
        
    }

    public void update(int row, int col, int val) {
        int dif = val - matrix[row][col];
        matrix[row][col] = val;
        init(row, col, dif);
    }
    
    private int getSum(int i, int j){
        i++;
        int initJ = ++j;
        int rst = 0;
        while(i > 0){
            j = initJ;
            while(j > 0){
                rst += bit[i][j];
                j -= j & -j;
            }
            i -= i & -i;
        }
        return rst;
    }

    public int sumRegion(int row1, int col1, int row2, int col2) {
        return getSum(row2, col2) - getSum(row1 - 1, col2) - (getSum(row2, col1 - 1) - getSum(row1 - 1, col1 - 1));
    }
