  
//recursive  
int kthSmallestVal;
int n=0;


public int kthSmallest(TreeNode root, int k) {

    //in-order traversal
    traversal(root, k);
    return kthSmallestVal;

}


public void traversal(TreeNode root, int k){

    if(root==null)
        return ;


    traversal(root.left, k);

    if(++n == k){
        kthSmallestVal = root.val; 
        return ;
    }

    traversal(root.right, k);

    return ;

}
    
    //iterative
    Stack<TreeNode> stack = new Stack<TreeNode>();
 
        TreeNode p = root;
        int result = 0;
        while(p != null || !stack.isEmpty()){
            if(p != null){
                stack.push(p);
                p = p.left;
            }else{
                TreeNode tmp = stack.pop();
                if(--k == 0) return tmp.val;
                p = tmp.right;
            }
        }
        
        
        return result;
