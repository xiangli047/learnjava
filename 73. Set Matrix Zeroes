
public void setZeroes(int[][] matrix) {
        int m = matrix.length,n = matrix[0].length;
        if(m == 0 || n == 0) return;
        boolean ism_0 = false, isn_0 = false;
        1.开始遍历整个矩阵，如果有任何数为0，则把该数所在行列的第一个数设为0， 同时用ism_0和isn_0来存储是否该数为第一列或第一行里的数
        若是，则在之后的遍历设置里需要把那一(行/列)全变为0，否则只有那行列头的数才需为0.
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(matrix[i][j] == 0){
                    matrix[0][j] = 0;
                    matrix[i][0] = 0;
                    
                    if(i == 0) ism_0 = true;
                    if(j == 0) isn_0 = true;
                }
            }
        }
        
        2.开始遍历从第二行/列开始，如果头数字为0，整个一行/列为0
        //set all m to 0 if the first is 0
        for(int i = 1; i < m; i++){
            if(matrix[i][0] == 0){
                for(int j = 1; j < n; j++){
                    matrix[i][j] = 0;
                }
            }
        }
        
        //set all n to 0 if the first is 0
        for(int j = 1; j < n; j++){
            if(matrix[0][j] == 0){
                for(int i = 1; i < m; i++){
                    matrix[i][j] = 0;
                }
            }
        }
        3.最后通过之前ism_0判断是否在一开始，首行/列就存在0，若是则整行/列设成0
        //set the first column to zero if some number are already 0
        if(ism_0){
            for(int j = 1; j < n; j++){
                matrix[0][j] = 0;
            }
        }
        
        //set the first row to zero if some number are already 0
        if(isn_0){
            for(int i = 1; i < m; i++){
                matrix[i][0] = 0;
            }
        }
        
        
    }
