1) get the height of left-most part
2) get the height of right-most part
3) when they are equal, the # of nodes = 2^h -1
4) when they are not equal, recursively get # of nodes from left&right sub-trees

public int countNodes(TreeNode root) {
        if(root == null) return 0;
        
        int left = heightLeft(root) + 1;
        int right = heightRight(root) + 1;
        
        if(left == right){
            return (2<<(left-1))-1;
        }
        return countNodes(root.left) + countNodes(root.right) + 1;
        
    }
    
    private int heightLeft(TreeNode root){
        if(root == null) return 0;
        int height = 0;
        while(root.left != null){
            height++;
            root = root.left;
        }
        return height;
    }
    
    private int heightRight(TreeNode root){
        if(root == null) return 0;
        int height = 0;
        while(root.right != null){
            height++;
            root = root.right;
        }
        return height;
    }
